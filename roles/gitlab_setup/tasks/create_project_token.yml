---
- name: "Assert that all needed variables are defined"
  assert:
    that:
      - gitlab_api_url is defined
      - gitlab_api_token is defined
      - gitlab_group is defined
      - gitlab_project is defined
      - gitlab_validate_certs is defined
      - gitlab_api_user is defined
      - gitlab_default_branch is defined
      - gitlab_http_protocol is defined

- name: Set Git repo URL
  set_fact:
    gitlab_api_url: "{{ gitlab_http_protocol }}://{{ gitlab_api_user }}:{{ gitlab_api_token }}@{{ gitlab_api_url | regex_replace('http://|https://','') }}"

- name: Get Git repo ID
  ansible.builtin.uri:
    url: "{{ gitlab_api_url }}/api/v4/projects?search={{ gitlab_project_creation.project.path }}"
    method: GET
    return_content: true
    validate_certs: false
    headers:
      PRIVATE-TOKEN: "{{ gitlab_api_token }}"
      Content-Type: application/json
  register: repo_id_res

- debug:
    var: repo_id_res

#   https://gitlab.iam.lab/api/v4/projects?search=NewOrgAut
#
# - name: Set Git repo URL
#   set_fact:
#     gitlab_repo: "{{ gitlab_http_protocol }}://{{ gitlab_api_user }}:{{ gitlab_api_token }}@{{ gitlab_api_url | regex_replace('http://|https://','') }}/api/v4/{{ gitlab_project_creation.project.path_with_namespace}}.git"
#
# - name: Create a deploy token for the given project
#   ansible.builtin.uri:
#     url: "{{ gitlab_api_url }}"
#     method: POST
#     #body: "{{ lookup('ansible.builtin.file','issue.json') }}"
#     body: '{"name": "CasC deploy token", "expires_at": "3000-01-01", "username": "", "scopes": ["read_repository"]}'
#     # status_code: 201
#     body_format: json
#     return_content: true
#     headers:
#       PRIVATE-TOKEN: "{{ gitlab_api_token }}"
#       Content-Type: application/json
...
#    api_url: "{{ gitlab_api_url }}"
#    validate_certs: "{{ gitlab_validate_certs }}"
#    api_token: "{{  gitlab_api_token }}"
#    "https://gitlab.example.com/api/v4/projects/5/deploy_tokens/"

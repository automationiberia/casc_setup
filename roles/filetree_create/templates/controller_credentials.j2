---
controller_credentials:
{%- raw %}
  - name: "{{orgs  }} {{ env }} Automation Hub Community Repository"
    description: ""
    credential_type: "Ansible Galaxy/Automation Hub API Token"
    organization: "{{ orgs }}"
    inputs:
{% endraw %}
      url: "https://{{ automation_hub }}/api/galaxy/content/community/"
{%- raw %}
      token: "ToDo"

  - name: "{{ orgs }} {{ env }} Automation Hub Published Repository"
    description: ""
    credential_type: "Ansible Galaxy/Automation Hub API Token"
    organization: "{{ orgs }}"
    inputs:
{% endraw %}
      url: "https://{{ automation_hub }}/api/galaxy/content/published/"
{%- raw %}
      token: "ToDo"

  - name: "{{ orgs }} {{ env }} Automation Hub RH Certified Repository"
    description: ""
    credential_type: "Ansible Galaxy/Automation Hub API Token"
    organization: "{{ orgs }}"
    inputs:
{% endraw %}
      url: "https://{{ automation_hub }}/api/galaxy/content/rh-certified/"
{%- raw %}
      token: "ToDo"

  - name: "{{ orgs }} {{ env }} AAP Credential"
    description: "{{ orgs }} {{ env }} Ansible Automation Platform Credential"
    credential_type: "Red Hat Ansible Automation Platform"
    organization: "{{ orgs }}"
    inputs:
      host: "{{ controller_hostname }}"
      username: "{{ controller_username }}"
      password: "{{ controller_password }}"
      verify_ssl: "{{ controller_validate_certs }}"

  - name: "{{ orgs }} {{ env }} Vault Credential"
    description: "{{ orgs }} {{ env }} Vault Credential"
    credential_type: "Vault"
    organization: "{{ orgs }}"
    inputs:
      vault_password: "ToDo"

  - name: "{{ orgs }} {{ env }} GitLab API Token"
    description: "{{ orgs }} {{ env }} GitLab API Token"
    credential_type: "GitLab API Token"
    organization: "{{ orgs }}"
    inputs:
      gitlab_token: "ToDo"
      gitlab_email: "ToDo"
      gitlab_user: "ToDo"

  - name: "{{ orgs }} {{ env }} GitLab Credential"
    description: "{{ orgs }} {{ env }} GitLab Credential"
    credential_type: "Source Control"
    organization: "{{ orgs }}"
    inputs:
      username: 'aap-demo'
      ssh_key_data: |
        -----BEGIN OPENSSH PRIVATE KEY-----
        ToDo
        -----END OPENSSH PRIVATE KEY-----
{% endraw %}
...

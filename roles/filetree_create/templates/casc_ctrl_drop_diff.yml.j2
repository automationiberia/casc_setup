---
{%- raw %}
- hosts: all
  connection: local
  gather_facts: false
  vars:
    controller_configuration_projects_async_retries: 120
    controller_configuration_projects_async_delay: 2
    controller_username: "{{ vault_controller_username | default(lookup('env', 'CONTROLLER_USERNAME')) }}"
    controller_password: "{{ vault_controller_password | default(lookup('env', 'CONTROLLER_PASSWORD')) }}"
    controller_hostname: "{{ vault_controller_hostname | default(lookup('env', 'CONTROLLER_HOST')) }}"
    controller_validate_certs: "{{ vault_controller_validate_certs | default(lookup('env', 'CONTROLLER_VERIFY_SSL')) }}"
  pre_tasks:
    - name: "Setup authentication (block)"
      block:
        - name: "Get the Authentication Token for the future requests"
          ansible.builtin.uri:
            url: "https://{{ controller_hostname }}/api/v2/tokens/"
            user: "{{ controller_username }}"
            password: "{{ controller_password }}"
            method: POST
            force_basic_auth: true
            validate_certs: "{{ controller_validate_certs }}"
            status_code: 201
          register: authtoken_res

        - name: "Set the oauth token to be used since now"
          ansible.builtin.set_fact:
            controller_oauthtoken: "{{ authtoken_res.json.token }}"
            controller_oauthtoken_url: "{{ authtoken_res.json.url }}"
      no_log: "{{ controller_configuration_object_diff_secure_logging | default('false') }}"
      when: controller_oauthtoken is not defined
      tags:
        - always
  roles:
    - role: infra.controller_configuration.filetree_read
    - role: infra.controller_configuration.object_diff
      vars:
        controller_configuration_object_diff_tasks:
          - {name: workflow_job_templates, var: controller_workflows, tags: workflow_job_templates}
          - {name: job_templates, var: controller_templates, tags: job_templates}
          # - {name: teams, var: controller_teams, tags: teams#}
          # - {name: user_accounts, var: controller_user_accounts, tags: users}
          - {name: groups, var: controller_groups, tags: groups}
          - {name: hosts, var: controller_hosts, tags: hosts}
          - {name: inventory_sources, var: controller_inventory_sources, tags: inventory_sources}
          - {name: inventories, var: controller_inventories, tags: inventories}
          - {name: projects, var: controller_projects, tags: projects}
          - {name: credentials, var: controller_credentials, tags: credentials}
          # - {name: credential_types, var: controller_credential_types, tags: credential_types}
          - {name: organizations, var: controller_organizations, tags: organizations}
    - role: infra.controller_configuration.dispatch
      vars:
        controller_configuration_dispatcher_roles:
          - {role: workflow_job_templates, var: controller_workflows, tags: workflow_job_templates}
          - {role: job_templates, var: controller_templates, tags: job_templates}
          # - {role: teams, var: controller_teams, tags: teams}
          # - {role: users, var: controller_user_accounts, tags: users}
          - {role: groups, var: controller_groups, tags: inventories}
          - {role: hosts, var: controller_hosts, tags: hosts}
          - {role: projects, var: controller_projects, tags: projects}
          - {role: inventory_sources, var: controller_inventory_sources, tags: inventory_sources}
          - {role: inventories, var: controller_inventories, tags: inventories}
          - {role: credentials, var: controller_credentials, tags: credentials}
          # - {role: credential_types, var: controller_credential_types, tags: credential_types}
          - {role: organizations, var: controller_organizations, tags: organizations}
  post_tasks:
    - name: "Delete the Authentication Token used"
      ansible.builtin.uri:
        url: "https://{{ controller_hostname }}{{ controller_oauthtoken_url }}"
        user: "{{ controller_username }}"
        password: "{{ controller_password }}"
        method: DELETE
        force_basic_auth: true
        validate_certs: "{{ controller_validate_certs }}"
        status_code: 204
      when: controller_oauthtoken_url is defined
{% endraw %}
...

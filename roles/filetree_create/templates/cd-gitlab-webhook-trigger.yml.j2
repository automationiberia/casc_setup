---
{%- raw %}
- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: "Get the modified files over the dirs from all the received commits"
      set_fact:
        env: "{{ tower_webhook_payload.ref.split('/')[2] }}"
        orgs: "{{ tower_webhook_payload.project.name }}"
        list_of_dirs: "{{ ((tower_webhook_payload.commits | map(attribute='added') | list) +
                           (tower_webhook_payload.commits | map(attribute='modified') | list) +
                           (tower_webhook_payload.commits | map(attribute='removed') | list))
                       | flatten }}"
    - name: "Get the Organization and the tags to run the CasC"
      set_fact:
        org_dirs_dict: "{{ (org_dirs_dict | default({})) | combine({input_var[0]: (((org_dirs_dict[input_var[0]] | default([])) + [input_var[1]] ) | unique ) }) }}"
      vars:
        input_var: "{{ item | regex_search('/([^/]*)/env/(?:[^/]*)/controller_(.*).d/', '\\1', '\\2') }}"
      loop: "{{ list_of_dirs }}"
      when: input_var | type_debug is match('list')

    - name: Configure Controller Job Launch | Launch launch_jobs creation
      include_role:
        name: redhat_cop.controller_configuration.job_launch
      vars:
        controller_launch_jobs:
          - name: "{{ org_tags.key }} CasC_JobTemplates_AAP_CD_Config_Controller"
            extra_vars:
              orgs: "{{ org_tags.key }}"
              dir_orgs_vars: 'orgs_vars'
              ansible_python_interpreter: "/usr/bin/python3"
              env: "{{ env }}"
            tags: "{{ org_tags.value }}"
            wait: true
            verbosity: 0
      with_dict: "{{ org_dirs_dict }}"
      loop_control:
        loop_var: org_tags
      when: org_dirs_dict is defined

# ansible-playbook ci-webhook-trigger.yml -e @orgs_vars/env/demo-dev/configure_connection_controller_credentials.yml --vault-password-file ./.vault_pass.txt -e @ci-webhook-variables.yml -e '{orgs: Global}'
{% endraw %}
...
